
#content-left

  %h1
    Materials

  // Will need to split the results into Antique, Newly Crafted and All. SEE BELOW
  %ul
    - @materials.each do |material|
      %li
        = link_to material.title, material_path(material.id)



  // Stone lists: Antiques, New, All
  %ul
    %li
      %a.expanded
        .arrow
        %span.arrowTxt Antiques

      %ul
        %li
          %a{href: "stone_antyangtzelime.html"}
            &ndash; Antique Yangtze
            // Indent for long titles
            %span.indentLinks Limestone

    // THIS LIST IS SET TO COLLAPSED, AS IT CONTAINS THE ITEM WE'RE VIEWING. I KNOW THE NAMING IS BACKWARDS - COLLAPSED = OPEN (we can change)
    %li
      %a.collapsed
        .arrow 
        %span.arrowTxt Newly Crafted

      %ul
        %li
          %a{href: "stone_amande.html"} &ndash; Amande Limestone

    %li
      %a.collapsed
        .arrow 
        %span.arrowTxt All Materials

      %ul
        %li
          %a{href: "stone_antyangtzelime.html"}
            &ndash; Antique Yangtze
            // Indent for long titles
            %span.indentLinks Limestone




#content-center.TwoColumnFix

  .filters 
    .filterWrap
      %select#mat_type_id
        %option{ class: "label", value: 'none', selected: "selected"} Search by Material Type
        - @all_mat_types.each do |mat_type|
          %option{:value => mat_type.id, :selected => nil }= mat_type.title

    .filterWrap
      %select#mat_finish_id
        %option{ class: "label", value: 'none', selected: "selected"} Search by Finishes
        - @all_mat_finishes.each do |finish|
          %option{:value => finish.id, :selected => nil }= finish.title
    
    .filterWrap
      %select#mat_app_id
        %option{ class: "label", value: 'none', selected: "selected" } Search by Applications
        - @all_mat_apps.each do |app|
          %option{:value => app.id, :selected =>  nil }= app.title         


    .clear
    
    %div#search_results
      %h2
        Search Results 
      %div#feh
      
    - @material.finishes.each do |fin| 
      - debug(@material)
      - if fin.title.nil?  
        %p= 'None'
      - else
        - @material.mats_with_finishes(fin.id).each do |mat| 
          %p= "finish title: #{fin.title}"
          %h3= "mat title: #{mat.title}"
          - if mat.images.count > 0    
            %ul#antique.thumbs.clearfix
            - mat.images.each do |i|    
              %li
                %a{ :href => i.image.url(:large) }
                  %img{:src => i.image.url(:thumb), :alt => "" }           
                    %span.material    
        
    - if mats_with_images = Material.newly_crafted_with_images.count > 0
      %br
      %br
      %h3 Newly Crafted
      - Material.newly_crafted_with_images.each do |mat| 
        - default_image = mat.images.first  
        %ul#new.thumbs.clearfix
          %li
            %a{:href => material_path(mat) }
              %img{:src => default_image.image.url(:thumb) }
              %span.material= "#{mat.title}"
              - unless mat_type_title = mat.get_material_type_title.nil?
                %span.type= "#{mat.get_material_type_title}"

